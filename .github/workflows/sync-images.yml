name: Process and Push Docker Images

on:
  push:
    paths:
      - 'upload/images.md'

jobs:
  process-images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # 安装必要的工具
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      # 获取 Docker Hub Token
      - name: Get Docker Hub Token
        id: docker_token
        run: |
          # 使用 Docker Hub API 获取认证令牌
          TOKEN=$(curl -s -H "Content-Type: application/json" \
            -X POST \
            -d "{\"username\": \"${{ secrets.DOCKERHUB_USERNAME }}\", \"password\": \"${{ secrets.DOCKERHUB_TOKEN }}\"}" \
            https://hub.docker.com/v2/users/login/ | jq -r .token)
          
          if [ -z "$TOKEN" ] || [ "$TOKEN" = "null" ]; then
            echo "Failed to get Docker Hub token"
            exit 1
          fi
          
          # 将令牌保存到环境变量
          echo "DOCKER_TOKEN=$TOKEN" >> $GITHUB_ENV
          echo "Token acquired successfully"

      # 设置 Docker 配置
      - name: Configure Docker
        run: |
          echo "Setting up Docker configuration..."
          mkdir -p $HOME/.docker
          echo "{\"auths\":{\"https://index.docker.io/v2/\":{\"auth\":\"$(echo -n "${{ secrets.DOCKERHUB_USERNAME }}:${{ env.DOCKER_TOKEN }}" | base64)\"}}}" > $HOME/.docker/config.json
          chmod 600 $HOME/.docker/config.json

      # 登录到阿里云容器仓库
      - name: Login to Aliyun Container Registry
        run: |
          echo "${{ secrets.ALIYUN_PASSWORD }}" | docker login "${{ secrets.ALIYUN_REGISTRY }}" -u "${{ secrets.ALIYUN_USERNAME }}" --password-stdin

      - name: Process new images
        run: |
          # 创建必要的目录
          mkdir -p temp done
          
          # 初始化日志文件
          echo "# Processing Log - $(date)" > temp/process.log
          
          process_image() {
            local image="$1"
            local repository="${image%:*}"
            local tag="${image#*:}"
            
            echo "Processing image: $image" >> temp/process.log
            
            # 使用 Docker Registry API 检查镜像
            AUTH_HEADER="Authorization: Bearer ${{ env.DOCKER_TOKEN }}"
            MANIFEST_URL="https://registry-1.docker.io/v2/${repository#*/}/manifests/${tag}"
            
            echo "Checking manifest at: $MANIFEST_URL" >> temp/process.log
            
            # 获取镜像清单
            MANIFEST=$(curl -sL -H "$AUTH_HEADER" \
              -H "Accept: application/vnd.docker.distribution.manifest.v2+json" \
              "$MANIFEST_URL")
            
            if [ -z "$MANIFEST" ]; then
              echo "Failed to get manifest for $image" >> temp/process.log
              return 1
            fi
            
            # 使用标准的 Docker 命令拉取镜像
            if docker pull $image; then
              local aliyun_image="${{ secrets.ALIYUN_REGISTRY }}/${image#*/}"
              echo "Tagging as: $aliyun_image" >> temp/process.log
              
              if docker tag $image $aliyun_image && \
                 docker push $aliyun_image; then
                touch "done/${image// /_}.txt"
                echo "Successfully processed: $image" >> temp/process.log
                return 0
              fi
            fi
            
            echo "Failed to process: $image" >> temp/process.log
            return 1
          }
          
          # 读取并处理镜像列表
          while IFS= read -r image || [[ -n "$image" ]]; do
            # 跳过空行和注释
            [[ -z "$image" || "${image:0:1}" == "#" ]] && continue
            
            # 清理输入
            image=$(echo "$image" | tr -d '\r' | xargs)
            
            if [ ! -f "done/${image// /_}.txt" ]; then
              if process_image "$image"; then
                echo "| \`$image\` | \`${{ secrets.ALIYUN_REGISTRY }}/${image#*/}\` |" >> temp/image_mapping.md
              fi
            else
              echo "Image already processed: $image" >> temp/process.log
            fi
          done < upload/images.md
          
          # 创建或更新映射文件
          if [ ! -f "image_list.md" ]; then
            echo "# Docker Image Mapping" > image_list.md
            echo "| DockerHub Image | Aliyun Mirror |" >> image_list.md
            echo "|-----------------|---------------|" >> image_list.md
          fi
          
          # 合并已有映射和新映射
          if [ -f "temp/image_mapping.md" ]; then
            cat temp/image_mapping.md >> image_list.md
            sort -u -o image_list.md image_list.md
          fi
          
          # 输出处理日志
          cat temp/process.log

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add done/ image_list.md
          git commit -m "Update image list and add processed markers" -a || echo "No changes to commit"
          git push
